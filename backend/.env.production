# =============================================================================
# AI-POWERED EXPENSE TRACKER - PRODUCTION ENVIRONMENT
# =============================================================================
# Copy this to .env and fill in your production values
# This file is for Render deployment - DO NOT commit to GitHub!
# =============================================================================

# -----------------------------------------------------------------------------
# APPLICATION SETTINGS
# -----------------------------------------------------------------------------
APP_NAME="AI-Powered Expense Tracker"
APP_VERSION="1.0.0"
ENVIRONMENT=production  # Must be 'production' for Render
DEBUG=false  # Must be 'false' for production

# API Configuration
API_V1_PREFIX=/api/v1
HOST=0.0.0.0
PORT=10000  # Render will override this

# -----------------------------------------------------------------------------
# SECURITY SETTINGS
# -----------------------------------------------------------------------------
# Generate a secure secret key for production
SECRET_KEY=your-secure-random-secret-key-here
ALGORITHM=HS256
ACCESS_TOKEN_EXPIRE_MINUTES=30
REFRESH_TOKEN_EXPIRE_DAYS=7

# -----------------------------------------------------------------------------
# SUPABASE CONFIGURATION (PRODUCTION)
# -----------------------------------------------------------------------------
# Get these from your Supabase project dashboard
SUPABASE_URL=https://your-project-id.supabase.co
SUPABASE_KEY=your-anon-public-key-here
SUPABASE_SERVICE_KEY=your-service-role-key-here
SUPABASE_JWT_SECRET=your-jwt-secret-here
SUPABASE_STORAGE_BUCKET=documents

# -----------------------------------------------------------------------------
# AI / LLM CONFIGURATION (REQUIRED)
# -----------------------------------------------------------------------------
# OpenRouter API (Primary - Recommended for production)
OPENROUTER_API_KEY=sk-or-v1-your-openrouter-api-key-here
OPENROUTER_BASE_URL=https://openrouter.ai/api/v1

# Cohere API (Optional - Backup)
COHERE_API_KEY=your-cohere-api-key-here

# OpenAI Configuration (Phase 3.3 - Document Classification & Extraction)
OPENAI_API_KEY=sk-or-v1-your-openrouter-key-here  # Use OpenRouter key
OPENAI_MODEL=gpt-4o-mini  # Cost-effective model for production
OPENAI_EMBEDDING_MODEL=text-embedding-3-small  # For Phase 3.4 (Vector Embeddings)

# Model Configuration
DEFAULT_LLM_MODEL=cohere/command-r-plus
DEFAULT_EMBEDDING_MODEL=cohere/embed-english-v3.0
MAX_TOKENS=4096
TEMPERATURE=0.3
EXTRACTION_CONFIDENCE_THRESHOLD=0.7

# -----------------------------------------------------------------------------
# N8N WORKFLOW CONFIGURATION (Optional)
# -----------------------------------------------------------------------------
N8N_WEBHOOK_URL=https://your-n8n-instance.com/webhook/process-document
N8N_API_KEY=your-n8n-api-key-here

# -----------------------------------------------------------------------------
# DOCUMENT PROCESSING SETTINGS
# -----------------------------------------------------------------------------
MAX_FILE_SIZE_MB=50
ALLOWED_FILE_TYPES=application/pdf,image/jpeg,image/png,image/tiff,application/vnd.ms-excel,application/vnd.openxmlformats-officedocument.spreadsheetml.sheet,text/csv

# -----------------------------------------------------------------------------
# VECTOR SEARCH SETTINGS
# -----------------------------------------------------------------------------
VECTOR_DIMENSIONS=1024
VECTOR_SEARCH_LIMIT=20

# -----------------------------------------------------------------------------
# RATE LIMITING
# -----------------------------------------------------------------------------
RATE_LIMIT_PER_MINUTE=60

# -----------------------------------------------------------------------------
# LOGGING CONFIGURATION
# -----------------------------------------------------------------------------
LOG_LEVEL=INFO  # DEBUG, INFO, WARNING, ERROR, CRITICAL
LOG_FORMAT=console  # console or json

# -----------------------------------------------------------------------------
# CORS SETTINGS (Frontend URLs)
# -----------------------------------------------------------------------------
# Add your Render frontend URL after deployment
CORS_ORIGINS=https://ai-expense-tracker-frontend.onrender.com,https://your-custom-domain.com

# =============================================================================
# PRODUCTION SETUP INSTRUCTIONS
# =============================================================================
#
# 1. SUPABASE SETUP:
#    - Create a new project at https://supabase.com
#    - Go to Project Settings > API
#    - Copy the Project URL to SUPABASE_URL
#    - Copy the anon/public key to SUPABASE_KEY
#    - Copy the service_role key to SUPABASE_SERVICE_KEY
#    - Go to Project Settings > API > JWT Settings
#    - Copy the JWT Secret to SUPABASE_JWT_SECRET
#
# 2. OPENROUTER API SETUP (REQUIRED):
#    - Sign up at https://openrouter.ai
#    - Create an API key
#    - Add credits to your account ($5 minimum recommended)
#    - Copy your API key to OPENROUTER_API_KEY and OPENAI_API_KEY
#    - Estimated cost: ~$0.002-0.005 per document
#
# 3. COHERE API SETUP (Optional):
#    - Sign up at https://cohere.com
#    - Create an API key
#    - Copy your API key to COHERE_API_KEY
#
# 4. RENDER DEPLOYMENT:
#    - Set all these environment variables in Render dashboard
#    - Backend service: ai-expense-tracker-api
#    - Frontend service: ai-expense-tracker-frontend
#    - Update CORS_ORIGINS with your Render frontend URL after deployment
#
# 5. SECRET KEY GENERATION:
#    Run locally: python -c "import secrets; print(secrets.token_hex(32))"
#    Or use: openssl rand -hex 32
#
# =============================================================================
#
# ðŸš€ AFTER DEPLOYMENT:
# 1. Update CORS_ORIGINS with your actual Render frontend URL
# 2. Test user registration and login
# 3. Test document upload and AI processing
# 4. Verify transaction auto-creation works
#
# ðŸ“Š MONITORING:
# - Check Render logs for errors
# - Monitor API usage on OpenRouter dashboard
# - Test health endpoint: GET /api/v1/health
#
# =============================================================================